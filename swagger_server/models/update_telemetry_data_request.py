# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.enum_sensor_type import EnumSensorType  # noqa: F401,E501
from swagger_server import util


class UpdateTelemetryDataRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, time: datetime=None, sensor_type: EnumSensorType=None, value: float=None):  # noqa: E501
        """UpdateTelemetryDataRequest - a model defined in Swagger

        :param time: The time of this UpdateTelemetryDataRequest.  # noqa: E501
        :type time: datetime
        :param sensor_type: The sensor_type of this UpdateTelemetryDataRequest.  # noqa: E501
        :type sensor_type: EnumSensorType
        :param value: The value of this UpdateTelemetryDataRequest.  # noqa: E501
        :type value: float
        """
        self.swagger_types = {
            'time': datetime,
            'sensor_type': EnumSensorType,
            'value': float
        }

        self.attribute_map = {
            'time': 'time',
            'sensor_type': 'sensor_type',
            'value': 'value'
        }
        self._time = time
        self._sensor_type = sensor_type
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'UpdateTelemetryDataRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UpdateTelemetryDataRequest of this UpdateTelemetryDataRequest.  # noqa: E501
        :rtype: UpdateTelemetryDataRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def time(self) -> datetime:
        """Gets the time of this UpdateTelemetryDataRequest.

        Data collection date  # noqa: E501

        :return: The time of this UpdateTelemetryDataRequest.
        :rtype: datetime
        """
        return self._time

    @time.setter
    def time(self, time: datetime):
        """Sets the time of this UpdateTelemetryDataRequest.

        Data collection date  # noqa: E501

        :param time: The time of this UpdateTelemetryDataRequest.
        :type time: datetime
        """

        self._time = time

    @property
    def sensor_type(self) -> EnumSensorType:
        """Gets the sensor_type of this UpdateTelemetryDataRequest.


        :return: The sensor_type of this UpdateTelemetryDataRequest.
        :rtype: EnumSensorType
        """
        return self._sensor_type

    @sensor_type.setter
    def sensor_type(self, sensor_type: EnumSensorType):
        """Sets the sensor_type of this UpdateTelemetryDataRequest.


        :param sensor_type: The sensor_type of this UpdateTelemetryDataRequest.
        :type sensor_type: EnumSensorType
        """

        self._sensor_type = sensor_type

    @property
    def value(self) -> float:
        """Gets the value of this UpdateTelemetryDataRequest.

        Sensor value  # noqa: E501

        :return: The value of this UpdateTelemetryDataRequest.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value: float):
        """Sets the value of this UpdateTelemetryDataRequest.

        Sensor value  # noqa: E501

        :param value: The value of this UpdateTelemetryDataRequest.
        :type value: float
        """

        self._value = value
