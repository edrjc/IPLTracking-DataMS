# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class UpdateGeoDataRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, time: datetime=None, latitude: str=None, longitude: str=None, altimeter: str=None):  # noqa: E501
        """UpdateGeoDataRequest - a model defined in Swagger

        :param time: The time of this UpdateGeoDataRequest.  # noqa: E501
        :type time: datetime
        :param latitude: The latitude of this UpdateGeoDataRequest.  # noqa: E501
        :type latitude: str
        :param longitude: The longitude of this UpdateGeoDataRequest.  # noqa: E501
        :type longitude: str
        :param altimeter: The altimeter of this UpdateGeoDataRequest.  # noqa: E501
        :type altimeter: str
        """
        self.swagger_types = {
            'time': datetime,
            'latitude': str,
            'longitude': str,
            'altimeter': str
        }

        self.attribute_map = {
            'time': 'time',
            'latitude': 'latitude',
            'longitude': 'longitude',
            'altimeter': 'altimeter'
        }
        self._time = time
        self._latitude = latitude
        self._longitude = longitude
        self._altimeter = altimeter

    @classmethod
    def from_dict(cls, dikt) -> 'UpdateGeoDataRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UpdateGeoDataRequest of this UpdateGeoDataRequest.  # noqa: E501
        :rtype: UpdateGeoDataRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def time(self) -> datetime:
        """Gets the time of this UpdateGeoDataRequest.

        Data collection date  # noqa: E501

        :return: The time of this UpdateGeoDataRequest.
        :rtype: datetime
        """
        return self._time

    @time.setter
    def time(self, time: datetime):
        """Sets the time of this UpdateGeoDataRequest.

        Data collection date  # noqa: E501

        :param time: The time of this UpdateGeoDataRequest.
        :type time: datetime
        """

        self._time = time

    @property
    def latitude(self) -> str:
        """Gets the latitude of this UpdateGeoDataRequest.


        :return: The latitude of this UpdateGeoDataRequest.
        :rtype: str
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude: str):
        """Sets the latitude of this UpdateGeoDataRequest.


        :param latitude: The latitude of this UpdateGeoDataRequest.
        :type latitude: str
        """

        self._latitude = latitude

    @property
    def longitude(self) -> str:
        """Gets the longitude of this UpdateGeoDataRequest.


        :return: The longitude of this UpdateGeoDataRequest.
        :rtype: str
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude: str):
        """Sets the longitude of this UpdateGeoDataRequest.


        :param longitude: The longitude of this UpdateGeoDataRequest.
        :type longitude: str
        """

        self._longitude = longitude

    @property
    def altimeter(self) -> str:
        """Gets the altimeter of this UpdateGeoDataRequest.


        :return: The altimeter of this UpdateGeoDataRequest.
        :rtype: str
        """
        return self._altimeter

    @altimeter.setter
    def altimeter(self, altimeter: str):
        """Sets the altimeter of this UpdateGeoDataRequest.


        :param altimeter: The altimeter of this UpdateGeoDataRequest.
        :type altimeter: str
        """

        self._altimeter = altimeter
